// server/controllers/profileController.js
const userModel = require('../models/userModel');

exports.getProfile = async (req, res) => {
  const telegram_id = req.params.id;

  try {
    console.log(`üîç –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è telegram_id: ${telegram_id}`);
    const profile = await userModel.getUserById(telegram_id);
    if (!profile) {
      console.warn(`‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ–∑ telegram_id ${telegram_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.`);
      return res.status(404).json({ error: 'User not found' });
    }
    console.log(`‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –∑–Ω–∞–π–¥–µ–Ω–æ:`, profile);
    res.status(200).json(profile);
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:', error);
    res.status(500).json({ error: 'Failed to fetch profile' });
  }
};

exports.updateProfile = async (req, res) => {
  const telegram_id = req.params.id;

  // –ó—á–∏—Ç—É—î–º–æ –∑ —Ç—ñ–ª–∞ —Ç—ñ –ø–æ–ª—è, —è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–µ –∑–º—ñ–Ω–∏—Ç–∏
  // –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É: —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î –≤ req.body, —Ç–æ –≤–æ–Ω–∏ –±—É–¥—É—Ç—å undefined
  let { name, bio, relationship_type, selected_spokies } = req.body;

  // –Ø–∫—â–æ selected_spokies –ø—Ä–∏–π—à–ª–æ —É –≤–∏–≥–ª—è–¥—ñ –º–∞—Å–∏–≤—É ‚Äì —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î–º–æ –π–æ–≥–æ; 
  // —è–∫—â–æ —Ä—è–¥–æ–∫ (JSON) ‚Äì –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—ñ–Ω –≤–∞–ª—ñ–¥–Ω–∏–π. –Ü–Ω–∞–∫—à–µ –∑–∞–ª–∏—à–∞—î–º–æ –π–æ–≥–æ null/undefined.
  if (selected_spokies && typeof selected_spokies !== 'string') {
    // –Ø–∫—â–æ —Ü–µ –≤–∂–µ –º–∞—Å–∏–≤, JSON-—Ä—è–¥–æ–∫ –∑—Ä–æ–±–∏–º–æ —Ç—ñ–ª—å–∫–∏ –∑–∞—Ä–∞–∑
    if (Array.isArray(selected_spokies)) {
      selected_spokies = JSON.stringify(selected_spokies);
    }
  } else if (typeof selected_spokies === 'string') {
    try {
      // –Ø–∫—â–æ –≤ —Ç—ñ–ª—ñ –≤–∂–µ –±—É–ª–∞ —Å—Ç—Ä–æ–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ: —Ü–µ –≤–∞–ª—ñ–¥–Ω–∏–π JSON?
      JSON.parse(selected_spokies);
      // —è–∫—â–æ –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ ‚Äî –∑–∞–ª–∏—à–∞—î–º–æ —è–∫ —î
    } catch {
      // —è–∫—â–æ —Å—Ç—Ä–æ–∫–∞ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ ‚Äì —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î–º–æ —ó—ó –∑–Ω–æ–≤—É (—â–æ–± –∑–∞–ø–æ–±—ñ–≥—Ç–∏ –ø–æ–º–∏–ª—Ü—ñ)
      selected_spokies = JSON.stringify(selected_spokies);
    }
  }

  try {
    // 1) –°–ø–µ—Ä—à—É –¥—ñ–∑–Ω–∞—î–º–æ—Å—è –ø–æ—Ç–æ—á–Ω–∏–π –∑–∞–ø–∏—Å —ñ–∑ –ë–î
    const existingUser = await userModel.getUserById(telegram_id);
    if (!existingUser) {
      console.warn(`‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${telegram_id}`);
      return res.status(404).json({ error: 'User not found' });
    }

    // 2) –§–æ—Ä–º—É—î–º–æ –æ—Å—Ç–∞—Ç–æ—á–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤:
    //    –Ø–∫—â–æ –≤ req.body –º–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äî –±–µ—Ä–µ–º–æ –π–æ–≥–æ,
    //    —ñ–Ω–∞–∫—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ —Å—Ç–∞—Ä—ñ (existingUser.<–ø–æ–ª–µ>)
    const finalName  = name  !== undefined ? name : existingUser.name;
    const finalBio   = bio   !== undefined ? bio  : existingUser.bio;
    const finalRelation = relationship_type !== undefined
                           ? relationship_type
                           : existingUser.relationship_type;
    const finalSpokies  = selected_spokies !== undefined
                           ? selected_spokies
                           : existingUser.selected_spokies;

    // 3) –í–∏–∫–ª–∏–∫–∞—î–º–æ —É userModel.updateUserFields –≤–∂–µ –∑ –ø–æ–≤–Ω–∏–º –Ω–∞–±–æ—Ä–æ–º (—É—Å—ñ 4 –ø–æ–ª—è):
    await userModel.updateUserFields(telegram_id, {
      name: finalName,
      bio: finalBio,
      relationship_type: finalRelation,
      selected_spokies: finalSpokies
    });

    console.log(`‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å ${telegram_id} —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ`);
    return res.status(200).json({ message: 'Profile updated' });
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:', error);
    return res.status(500).json({ error: 'Failed to update profile' });
  }
};
