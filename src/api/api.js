import axios from 'axios';

const API_BASE = process.env.REACT_APP_API_BASE || '';
export const API_URL = `${API_BASE}/auth`;

const PROFILE_URL = 'http://localhost:5000/profile';

// üîπ –§—É–Ω–∫—Ü—ñ—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const registerUser = async (userData, photoFiles) => {
    try {
        console.log("üì© –î–∞–Ω—ñ –ø–µ—Ä–µ–¥ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—î—é:", userData);

        // ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ `telegram_id`
        if (!userData.telegram_id || typeof userData.telegram_id !== "string") {
            console.warn("‚ö†Ô∏è 'telegram_id' –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π, –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—é –≤ —Ä—è–¥–æ–∫!");
            userData.telegram_id = String(userData.telegram_id);
        }

        // ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è FormData –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
        const formData = new FormData();
        Object.keys(userData).forEach((key) => {
            formData.append(key, userData[key]);
        });

        // –î–æ–¥–∞—î–º–æ —Ñ–æ—Ç–æ —É FormData
        if (Array.isArray(photoFiles) && photoFiles.length > 0) {
            photoFiles.forEach((photo) => {
                console.log(`üñºÔ∏è –î–æ–¥–∞—î–º–æ —Ñ–æ—Ç–æ: ${photo.name}`);
                formData.append('photos', photo);
            });
        } else {
            console.warn("‚ö†Ô∏è –ù–µ–º–∞—î —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.");
        }

        console.log("üì§ –í–º—ñ—Å—Ç FormData –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", Object.fromEntries(formData.entries()));

        // ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const response = await axios.post(`${API_URL}/register`, formData, {
            headers: {
                'Content-Type': 'multipart/form-data',
            },
        });

        console.log("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!", response.data);
        return response.data;
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:', error.response ? error.response.data : error.message);
        throw error;
    }
};

// üîπ –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const getUserProfile = async (telegramId) => {
    try {
        console.log(`üîπ –ó–∞–ø–∏—Ç –ø—Ä–æ—Ñ—ñ–ª—é –¥–ª—è telegram_id: ${telegramId}`);

        const response = await axios.get(`${PROFILE_URL}/${telegramId}`);
        console.log("üîπ –ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ:", response.data);

        return response.data;
    } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", error.response ? error.response.data : error.message);
        throw error;
    }
};
